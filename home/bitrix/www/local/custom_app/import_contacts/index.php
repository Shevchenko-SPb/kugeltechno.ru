<?php
require_once 'Settings.php';
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #555;
        }
        input[type="file"] {
            width: 100%;
            padding: 10px;
            border: 2px dashed #ddd;
            border-radius: 4px;
            background-color: #fafafa;
        }
        button {
            background-color: #007bff;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
            margin-top: 10px;
        }
        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        button:hover:not(:disabled) {
            background-color: #0056b3;
        }
        .file-info {
            margin-top: 10px;
            padding: 10px;
            background-color: #e9ecef;
            border-radius: 4px;
            display: none;
        }
        .error {
            color: #dc3545;
            margin-top: 10px;
        }
        .success {
            color: #28a745;
            margin-top: 10px;
        }
        .progress-container {
            margin-top: 20px;
            display: none;
        }
        .progress-bar {
            width: 100%;
            height: 30px;
            background-color: #e9ecef;
            border-radius: 15px;
            overflow: hidden;
            margin-bottom: 10px;
        }
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #007bff, #0056b3);
            width: 0%;
            transition: width 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }
        .progress-info {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 4px;
            border-left: 4px solid #007bff;
        }
        .progress-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
            margin-top: 10px;
        }
        .stat-item {
            background: white;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #dee2e6;
        }
        .stat-label {
            font-size: 12px;
            color: #6c757d;
            margin-bottom: 5px;
        }
        .stat-value {
            font-size: 18px;
            font-weight: bold;
            color: #495057;
        }
        .import-log {
            max-height: 200px;
            overflow-y: auto;
            background: #f8f9fa;
            padding: 10px;
            border-radius: 4px;
            font-family: monospace;
            font-size: 12px;
            margin-top: 10px;
        }
        .warning-block {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 25px;
            border-left: 4px solid #f39c12;
        }
        .warning-block h3 {
            color: #856404;
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 18px;
        }
        .warning-block p {
            color: #856404;
            margin-bottom: 15px;
            line-height: 1.5;
        }
        .columns-list {
            background-color: #ffffff;
            border: 1px solid #e9ecef;
            border-radius: 4px;
            padding: 15px;
            margin: 10px 0;
        }
        .columns-list h4 {
            margin-top: 0;
            margin-bottom: 10px;
            color: #495057;
            font-size: 16px;
        }
        .columns-list ol {
            margin: 0;
            padding-left: 20px;
        }
        .columns-list li {
            padding: 3px 0;
            color: #495057;
        }
        .columns-list li.empty-column {
            color: #6c757d;
            font-style: italic;
        }
        .toggle-details {
            background: #007bff;
            border: 1px solid #007bff;
            color: white;
            text-decoration: none;
            cursor: pointer;
            font-size: 14px;
            padding: 8px 16px;
            margin-top: 10px;
            border-radius: 4px;
            transition: all 0.3s ease;
        }
        .toggle-details:hover {
            background: #0056b3;
            border-color: #0056b3;
            transform: translateY(-1px);
        }
        .warning {
            color: #856404;
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 4px;
            padding: 15px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</h1>
        
        <!-- –ë–ª–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–æ—Ä—è–¥–∫–µ —Å—Ç–æ–ª–±—Ü–æ–≤ -->
        <div class="warning-block">
            <h3>‚ö†Ô∏è –í–∞–∂–Ω–æ! –ü–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ Excel —Ñ–∞–π–ª–µ</h3>
            
            <button type="button" class="toggle-details" onclick="toggleColumnOrder()">
                <span id="toggleOrderText">üìã –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏</span>
            </button>
            
            <div id="columnOrderDetails" style="display: none; margin-top: 15px;">
                <p><strong>–°—Ç–æ–ª–±—Ü—ã –≤ –≤–∞—à–µ–º Excel —Ñ–∞–π–ª–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã —Å—Ç—Ä–æ–≥–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.</strong></p>
                <p><strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –ï—Å–ª–∏ –ø–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ –±—É–¥–µ—Ç –Ω–∞—Ä—É—à–µ–Ω, –∫–æ–Ω—Ç–∞–∫—Ç—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å –æ—à–∏–±–∫–∞–º–∏ –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!</p>
                
                <div class="columns-list">
                    <h4>–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤:</h4>
                    <ol>
                        <?php
                        foreach (Settings::AR_FIELDS as $index => $field) {
                            $columnNumber = $index + 1;
                            if (empty($field)) {
                                echo "<li class='empty-column'>–°—Ç–æ–ª–±–µ—Ü {$columnNumber}: (–ø—É—Å—Ç–æ–π —Å—Ç–æ–ª–±–µ—Ü)</li>";
                            } else {
                                echo "<li>–°—Ç–æ–ª–±–µ—Ü {$columnNumber}: <strong>{$field}</strong></li>";
                            }
                        }
                        ?>
                    </ol>
                </div>
                
                <button type="button" class="toggle-details" onclick="toggleColumnDetails()" style="margin-top: 10px;">
                    <span id="toggleText">–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏</span>
                </button>
                
                <div id="columnDetails" style="display: none; margin-top: 15px;">
                    <div style="background-color: #f8f9fa; padding: 15px; border-radius: 4px; border-left: 3px solid #007bff;">
                        <h4 style="margin-top: 0; color: #495057;">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
                        <ul style="margin: 0; color: #495057;">
                            <li>–ü—É—Å—Ç—ã–µ —Å—Ç–æ–ª–±—Ü—ã (—Å—Ç–æ–ª–±—Ü—ã 3, 9, 10) –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ñ–∞–π–ª–µ, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö</li>
                            <li>–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤</li>
                            <li>–î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏</li>
                            <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å—Ç–æ–ª–±—Ü—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö –ø—É—Å—Ç—ã–µ</li>
                            <li><strong>–ì–∏–±–∫–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–π:</strong> —Å–∏—Å—Ç–µ–º–∞ –¥–æ–ø—É—Å–∫–∞–µ—Ç –Ω–µ–±–æ–ª—å—à–∏–µ –æ—Ç–ª–∏—á–∏—è –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ (–ø—Ä–æ–±–µ–ª—ã, —Ä–µ–≥–∏—Å—Ç—Ä, —Å–∏–Ω–æ–Ω–∏–º—ã)</li>
                            <li>–ù–∞–ø—Ä–∏–º–µ—Ä: "–ú–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω" = "–ú–æ–±–∏–ª—å–Ω—ã–π–¢–µ–ª–µ—Ñ–æ–Ω" = "–ú–æ–±–∏–ª—å–Ω—ã–π" = "–°–æ—Ç–æ–≤—ã–π"</li>
                            <li>–ù–∞–ø—Ä–∏–º–µ—Ä: "–î–æ–ª–∂–Ω–æ—Å—Ç—å" = "–î–æ–ª–∂–Ω–æ—Å—Ç—å–ü–æ–í–∏–∑–∏—Ç–∫–µ" = "–ü–æ–∑–∏—Ü–∏—è" = "–†–æ–ª—å"</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        <form id="uploadForm" action="upload.php" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label for="fileInput">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª .xlsx:</label>
                <input type="file" id="fileInput" name="uploaded_file" accept=".xlsx">
                <div id="fileInfo" class="file-info"></div>
            </div>
            
            <button type="submit" id="uploadBtn" disabled>–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É</button>
        </form>
        
        <div id="message"></div>
        
        <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ -->
        <div id="progressContainer" class="progress-container">
            <div class="progress-info">
                <h3>–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</h3>
                <div class="progress-bar">
                    <div id="progressFill" class="progress-fill">0%</div>
                </div>
                
                <div class="progress-stats">
                    <div class="stat-item">
                        <div class="stat-label">–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</div>
                        <div id="processedContacts" class="stat-value">0</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">–í—Å–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</div>
                        <div id="totalContacts" class="stat-value">0</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">–î–æ–±–∞–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</div>
                        <div id="uploadedContacts" class="stat-value">0</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</div>
                        <div id="updatedContacts" class="stat-value">0</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">–î–æ–±–∞–≤–ª–µ–Ω–æ –∫–æ–º–ø–∞–Ω–∏–π</div>
                        <div id="uploadedCompanies" class="stat-value">0</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">–û—à–∏–±–æ–∫</div>
                        <div id="errorCount" class="stat-value">0</div>
                    </div>
                </div>
                
                <div id="importLog" class="import-log"></div>
            </div>
        </div>
    </div>

    <script>
        const fileInput = document.getElementById('fileInput');
        const uploadBtn = document.getElementById('uploadBtn');
        const fileInfo = document.getElementById('fileInfo');
        const uploadForm = document.getElementById('uploadForm');
        const messageDiv = document.getElementById('message');
        const progressContainer = document.getElementById('progressContainer');
        
        // –≠–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        const progressFill = document.getElementById('progressFill');
        const processedContacts = document.getElementById('processedContacts');
        const totalContacts = document.getElementById('totalContacts');
        const uploadedContacts = document.getElementById('uploadedContacts');
        const updatedContacts = document.getElementById('updatedContacts');
        const uploadedCompanies = document.getElementById('uploadedCompanies');
        const errorCount = document.getElementById('errorCount');
        const importLog = document.getElementById('importLog');
        
        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–º
        let currentSessionId = null;
        let importInterval = null;

        fileInput.addEventListener('change', function() {
            const file = this.files[0];
            
            if (file) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                const fileName = file.name.toLowerCase();
                const isXlsx = fileName.endsWith('.xlsx');
                
                if (isXlsx) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
                    fileInfo.innerHTML = `
                        <strong>–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª:</strong><br>
                        –ù–∞–∑–≤–∞–Ω–∏–µ: ${file.name}<br>
                        –†–∞–∑–º–µ—Ä: ${(file.size / 1024).toFixed(2)} KB<br>
                        –¢–∏–ø: ${file.type || 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}
                    `;
                    fileInfo.style.display = 'block';
                    
                    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
                    uploadBtn.disabled = false;
                    messageDiv.innerHTML = '';
                } else {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                    alert('–û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx');
                    fileInfo.style.display = 'none';
                    uploadBtn.disabled = true;
                    this.value = ''; // –û—á–∏—â–∞–µ–º input
                }
            } else {
                fileInfo.style.display = 'none';
                uploadBtn.disabled = true;
            }
        });

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        function updateProgress(progressData) {
            const percent = progressData.progress_percent || 0;
            progressFill.style.width = percent + '%';
            progressFill.textContent = percent + '%';
            
            processedContacts.textContent = progressData.processed_contacts || 0;
            totalContacts.textContent = progressData.total_contacts || 0;
            uploadedContacts.textContent = progressData.contacts_upload_count || 0;
            updatedContacts.textContent = progressData.contacts_updated_count || 0;
            uploadedCompanies.textContent = progressData.companies_upload_count || 0;
            errorCount.textContent = progressData.contacts_upload_error_count || 0;
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
        function addLogEntry(message) {
            const timestamp = new Date().toLocaleTimeString();
            importLog.innerHTML += `[${timestamp}] ${message}<br>`;
            importLog.scrollTop = importLog.scrollHeight;
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–∞—Ç—á–∞
        function processNextBatch() {
            if (!currentSessionId) return;
            
            const formData = new FormData();
            formData.append('session_id', currentSessionId);
            
            fetch('src/process_batch.php', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success && data.data) {
                    updateProgress(data.data);
                    
                    if (data.data.completed) {
                        // –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω
                        clearInterval(importInterval);
                        addLogEntry('–ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
                        uploadBtn.disabled = false;
                        uploadBtn.textContent = '–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É';
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        let finalMessage = '<div class="success">–ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!</div>';
                        finalMessage += `<div style="margin-top: 10px;">`;
                        finalMessage += `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ${data.data.processed_contacts}<br>`;
                        finalMessage += `–î–æ–±–∞–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ${data.data.contacts_upload_count}<br>`;
                        finalMessage += `–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ${data.data.contacts_updated_count}<br>`;
                        finalMessage += `–î–æ–±–∞–≤–ª–µ–Ω–æ –∫–æ–º–ø–∞–Ω–∏–π: ${data.data.companies_upload_count}<br>`;
                        if (data.data.contacts_upload_error_count > 0) {
                            finalMessage += `–û—à–∏–±–æ–∫: ${data.data.contacts_upload_error_count}<br>`;
                            finalMessage += `<button onclick="downloadErrors('${currentSessionId}')" style="margin-top: 10px; background-color: #dc3545; padding: 8px 16px; border: none; border-radius: 4px; color: white; cursor: pointer;">–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏</button><br>`;
                        }
                        finalMessage += `</div>`;
                        messageDiv.innerHTML = finalMessage;
                    } else {
                        addLogEntry(`–û–±—Ä–∞–±–æ—Ç–∞–Ω –±–∞—Ç—á ${data.data.current_batch}/${data.data.total_batches}`);
                    }
                } else {
                    addLogEntry('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –±–∞—Ç—á–∞: ' + (data.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                }
            })
            .catch(error => {
                addLogEntry('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –±–∞—Ç—á–∞');
                console.error('Error:', error);
            });
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        function checkProgress() {
            if (!currentSessionId) return;
            
            fetch(`src/get_progress.php?session_id=${currentSessionId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success && data.data) {
                    updateProgress(data.data);
                    
                    if (!data.data.completed) {
                        // –ï—Å–ª–∏ –∏–º–ø–æ—Ä—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –±–∞—Ç—á
                        processNextBatch();
                    }
                }
            })
            .catch(error => {
                console.error('Error checking progress:', error);
            });
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–º–ø–æ—Ä—Ç–∞
        function startImport(sessionId) {
            currentSessionId = sessionId;
            progressContainer.style.display = 'block';
            messageDiv.innerHTML = '';
            
            // –û—á–∏—â–∞–µ–º –ª–æ–≥
            importLog.innerHTML = '';
            addLogEntry('–ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...');
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
            importInterval = setInterval(checkProgress, 2000);
            
            // –°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            checkProgress();
        }

        uploadForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const file = fileInput.files[0];
            if (!file) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª');
                return;
            }
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            if (!file.name.toLowerCase().endsWith('.xlsx')) {
                alert('–û—à–∏–±–∫–∞: –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx');
                return;
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
            const formData = new FormData(this);
            
            uploadBtn.disabled = true;
            uploadBtn.textContent = '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞...';
            
            fetch('upload.php', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success && data.data && data.data.ready_for_import) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ —Å—Ç–æ–ª–±—Ü–∞—Ö
                    if (data.data.has_column_warnings) {
                        let warningHtml = '<div class="' + (data.data.has_critical_errors ? 'error' : 'warning') + '">';
                        warningHtml += '<strong>' + (data.data.has_critical_errors ? '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ —Å—Ç–æ–ª–±—Ü–æ–≤!' : '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–æ—Ä—è–¥–∫–µ —Å—Ç–æ–ª–±—Ü–æ–≤') + '</strong><br>';
                        
                        if (data.data.column_warnings && data.data.column_warnings.length > 0) {
                            warningHtml += '<ul style="margin: 10px 0; padding-left: 20px;">';
                            data.data.column_warnings.forEach(warning => {
                                warningHtml += '<li>' + warning + '</li>';
                            });
                            warningHtml += '</ul>';
                        }
                        
                        if (data.data.has_critical_errors) {
                            warningHtml += '<p><strong>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º!</strong></p>';
                            warningHtml += '<button onclick="location.reload()" style="background-color: #dc3545; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; margin-right: 10px;">–ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª</button>';
                            warningHtml += '<button onclick="continueImportAnyway(\'' + data.data.session_id + '\')" style="background-color: #ffc107; color: #212529; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–º–ø–æ—Ä—Ç</button>';
                        } else {
                            warningHtml += '<p>–ò–º–ø–æ—Ä—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å—Å—è, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.</p>';
                            warningHtml += '<button onclick="continueImportAnyway(\'' + data.data.session_id + '\')" style="background-color: #28a745; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–º–ø–æ—Ä—Ç</button>';
                        }
                        
                        warningHtml += '</div>';
                        messageDiv.innerHTML = warningHtml;
                        
                        uploadBtn.disabled = false;
                        uploadBtn.textContent = '–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É';
                    } else {
                        // –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç
                        uploadBtn.textContent = '–ò–º–ø–æ—Ä—Ç...';
                        startImport(data.data.session_id);
                    }
                } else {
                    messageDiv.innerHTML = `<div class="error">${data.message}</div>`;
                    uploadBtn.disabled = false;
                    uploadBtn.textContent = '–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É';
                }
            })
            .catch(error => {
                messageDiv.innerHTML = `<div class="error">–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞</div>`;
                console.error('Error:', error);
                uploadBtn.disabled = false;
                uploadBtn.textContent = '–ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É';
            });
        });
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –æ—à–∏–±–∫–∞–º–∏
        function downloadErrors(sessionId) {
            if (!sessionId) {
                alert('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID —Å–µ—Å—Å–∏–∏');
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            const downloadUrl = `src/download_errors.php?session_id=${sessionId}`;
            
            // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –∏ –∫–ª–∏–∫–∞–µ–º –ø–æ –Ω–µ–π
            const link = document.createElement('a');
            link.href = downloadUrl;
            link.download = `import_errors_${sessionId}.xlsx`;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
        function toggleColumnOrder() {
            const orderDetails = document.getElementById('columnOrderDetails');
            const toggleOrderText = document.getElementById('toggleOrderText');
            
            if (orderDetails.style.display === 'none') {
                orderDetails.style.display = 'block';
                toggleOrderText.textContent = 'üìã –°–∫—Ä—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏';
            } else {
                orderDetails.style.display = 'none';
                toggleOrderText.textContent = 'üìã –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏';
            }
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π
        function toggleColumnDetails() {
            const details = document.getElementById('columnDetails');
            const toggleText = document.getElementById('toggleText');
            
            if (details.style.display === 'none') {
                details.style.display = 'block';
                toggleText.textContent = '–°–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏';
            } else {
                details.style.display = 'none';
                toggleText.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏';
            }
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        function continueImportAnyway(sessionId) {
            if (!sessionId) {
                alert('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID —Å–µ—Å—Å–∏–∏');
                return;
            }
            
            uploadBtn.disabled = true;
            uploadBtn.textContent = '–ò–º–ø–æ—Ä—Ç...';
            messageDiv.innerHTML = '<div class="warning">–ò–º–ø–æ—Ä—Ç –Ω–∞—á–∞—Ç –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —Å—Ç–æ–ª–±—Ü–∞—Ö. –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!</div>';
            
            startImport(sessionId);
        }
    </script>
</body>
</html>